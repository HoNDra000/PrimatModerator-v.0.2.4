import vk_api
import sqlite3
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import humanize

token = "vk1.a.Pg1ns9k6EK3UbgwpAlY4ye55WND7iY8o1YFuIJVG6Mb8gHDVNiumdx4cB10oW8F_dxPEe9Vf9Q8KQvoCkMDBsTvWdIoVnsoVKE3oYY_li43_BVYxYsNbEWHDEQu2-E9hyswVt6PNRaX2TsiX2g_I4khGhSnSHTk8Q-vwvKoQyQh0JTetiXJYu1lASd4vk1rM"
bh = vk_api.VkApi(token = token)
longpoll = VkBotLongPoll(bh, 214740674)
give = bh.get_api()

def create_keyboard(message, user_id):
	keyboard = VkKeyboard(one_time=True)
 
	if message == 'admin menu' or message == '–∞–¥–º–∏–Ω –º–µ–Ω—é' or message == 'adminmen' or message == '–∞–¥–º–∏–Ω-–º–µ–Ω—é':
		adm = get_as(user_id)
		if adm == 1:
			keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–æ–ø—Ä–æ—Å–æ–≤', color=VkKeyboardColor.POSITIVE)
			keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–ø–æ—Ä—Ç–æ–≤', color=VkKeyboardColor.POSITIVE)
			keyboard.add_line()
			keyboard.add_button('–ê–¥–º–∏–Ω-–∏–Ω—Ñ–æ', color=VkKeyboardColor.SECONDARY)
			keyboard.add_button('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', color=VkKeyboardColor.SECONDARY)
			keyboard.add_line()
			keyboard.add_button('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤ —Å–µ—Ç–∏', color=VkKeyboardColor.SECONDARY)
			keyboard.add_line()
			keyboard.add_button('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–º–µ–Ω—é', color=VkKeyboardColor.NEGATIVE)
		elif adm == 2:
			keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–æ–ø—Ä–æ—Å–æ–≤', color=VkKeyboardColor.POSITIVE)
			keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–ø–æ—Ä—Ç–æ–≤', color=VkKeyboardColor.POSITIVE)
			keyboard.add_line()
			keyboard.add_button('–ê–¥–º–∏–Ω-–∏–Ω—Ñ–æ', color=VkKeyboardColor.SECONDARY)
			keyboard.add_button('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', color=VkKeyboardColor.SECONDARY)
			keyboard.add_line()
			keyboard.add_button('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤ —Å–µ—Ç–∏', color=VkKeyboardColor.SECONDARY)
			keyboard.add_line()
			keyboard.add_button('–ë–∞–Ω', color=VkKeyboardColor.NEGATIVE)
			keyboard.add_line()
			keyboard.add_button('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–º–µ–Ω—é', color=VkKeyboardColor.NEGATIVE)
		elif adm == 3:
			keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–æ–ø—Ä–æ—Å–æ–≤', color=VkKeyboardColor.POSITIVE)
			keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–ø–æ—Ä—Ç–æ–≤', color=VkKeyboardColor.POSITIVE)
			keyboard.add_line()
			keyboard.add_button('–ê–¥–º–∏–Ω-–∏–Ω—Ñ–æ', color=VkKeyboardColor.SECONDARY)
			keyboard.add_button('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', color=VkKeyboardColor.SECONDARY)
			keyboard.add_line()
			keyboard.add_button('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤ —Å–µ—Ç–∏', color=VkKeyboardColor.SECONDARY)
			keyboard.add_line()
			keyboard.add_button('–†–∞–∑–±–∞–Ω', color=VkKeyboardColor.POSITIVE)
			keyboard.add_button('–ë–∞–Ω', color=VkKeyboardColor.NEGATIVE)
			keyboard.add_line()
			keyboard.add_button('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–º–µ–Ω—é', color=VkKeyboardColor.NEGATIVE)
		elif adm == 4 or adm == 5:
			keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä –≤–æ–ø—Ä–æ—Å–æ–≤', color=VkKeyboardColor.POSITIVE)
			keyboard.add_button('–ü—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–ø–æ—Ä—Ç–æ–≤', color=VkKeyboardColor.POSITIVE)
			keyboard.add_line()
			keyboard.add_button('–ê–¥–º–∏–Ω-–∏–Ω—Ñ–æ', color=VkKeyboardColor.SECONDARY)
			keyboard.add_button('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è', color=VkKeyboardColor.SECONDARY)
			keyboard.add_line()
			keyboard.add_button('–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è, –∫–æ—Ç–æ—Ä–∞—è –≤ —Å–µ—Ç–∏', color=VkKeyboardColor.SECONDARY)
			keyboard.add_line()
			keyboard.add_button('–†–∞–∑–±–∞–Ω', color=VkKeyboardColor.POSITIVE)
			keyboard.add_button('–ë–∞–Ω', color=VkKeyboardColor.NEGATIVE)
			keyboard.add_line()
			keyboard.add_button('–í—ã–¥–∞—Ç—å –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫—É', color=VkKeyboardColor.POSITIVE)
			keyboard.add_button('–°–Ω—è—Ç—å', color=VkKeyboardColor.NEGATIVE)
			keyboard.add_line()
			keyboard.add_button('–ü–æ–≤—ã—Å–∏—Ç—å', color=VkKeyboardColor.POSITIVE)
			keyboard.add_button('–ü–æ–Ω–∏–∑–∏—Ç—å', color=VkKeyboardColor.NEGATIVE)
			keyboard.add_line()
			keyboard.add_button('–í—ã–π—Ç–∏ –∏–∑ –∞–¥–º–∏–Ω-–º–µ–Ω—é', color=VkKeyboardColor.NEGATIVE)
	if message == 'key1_reports':
		keyboard.add_button('–ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–ø–æ—Ä—Ç–æ–≤', color=VkKeyboardColor.POSITIVE)
		keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é', color=VkKeyboardColor.NEGATIVE)
	if message == 'report_do':
		keyboard.add_button('–ó–∞–±–∞–Ω–∏—Ç—å', color=VkKeyboardColor.NEGATIVE)
		keyboard.add_button('–£–¥–∞–ª–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç', color=VkKeyboardColor.NEGATIVE)
		keyboard.add_line()
		keyboard.add_button('–ü–æ–Ω–∏–∑–∏—Ç—å —Ñ–∞–∫—Ç–æ—Ä –¥–æ–≤–µ—Ä–∏—è', color=VkKeyboardColor.NEGATIVE)
	if message == 'key1_questions':
		keyboard.add_button('–ù–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–æ–ø—Ä–æ—Å–æ–≤', color=VkKeyboardColor.POSITIVE)
		keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é', color=VkKeyboardColor.NEGATIVE)
	if message == 'questions_do':
		keyboard.add_button('–û—Ç–≤–µ—Ç–∏—Ç—å', color=VkKeyboardColor.POSITIVE)
		keyboard.add_button('–ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å', color=VkKeyboardColor.SECONDARY)
	if message == 'menu':
		keyboard.add_button('–ú–æ–π –±–∞–ª–∞–Ω—Å', color=VkKeyboardColor.POSITIVE)
		keyboard.add_button('–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–µ—Å–µ–¥–æ–π', color=VkKeyboardColor.POSITIVE)
		adm = get_as(user_id)
		if int(adm) > 1 or int(adm) == 1:
			keyboard.add_line()
			keyboard.add_button('–ê–¥–º–∏–Ω-–ú–µ–Ω—é', color=VkKeyboardColor.NEGATIVE)
	if message == 'chat_manage':
		keyboard.add_button('–í—ã–¥–∞—á–∞ —Å—Ç–∞—Ç—É—Å–æ–≤', color=VkKeyboardColor.POSITIVE)
		keyboard.add_button('–ó–∞–±–∞–Ω–µ–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏', color=VkKeyboardColor.POSITIVE)
		keyboard.add_line()
		keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è', color=VkKeyboardColor.NEGATIVE)
	if message == 'chat_status_manage':
		keyboard.add_button('–í—ã–¥–∞—Ç—å –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞', color=VkKeyboardColor.POSITIVE)
		keyboard.add_button('–í—ã–¥–∞—Ç—å –ì–ª.–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞', color=VkKeyboardColor.POSITIVE)
		keyboard.add_line()
		keyboard.add_button('–í—ã–¥–∞—Ç—å –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', color=VkKeyboardColor.POSITIVE)
		keyboard.add_button('–í—ã–¥–∞—Ç—å –ì–ª.–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞', color=VkKeyboardColor.POSITIVE)
		keyboard.add_line()
		keyboard.add_button('–í—ã–¥–∞—Ç—å –í–ª–∞–¥–µ–ª—å—Ü–∞', color=VkKeyboardColor.NEGATIVE)
		keyboard.add_button('–°–Ω—è—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∞', color=VkKeyboardColor.NEGATIVE)
		keyboard.add_line()
		keyboard.add_button('–í–µ—Ä–Ω—É—Ç—å—Å—è', color=VkKeyboardColor.NEGATIVE)
	keyboard = keyboard.get_keyboard()
	return keyboard

def is_num(str):
	try:
		float(str)
		return True
	except ValueError:
		return False

def elements_num(list):
	count = 0
	for element in list:
		count += 1
	return count

def msg(id, text):
	bh.method('messages.send', {'chat_id' : id, 'message' : text, 'random_id': 0})
def send(id, text, keyboard):
	bh.method('messages.send', {'user_id' : id, 'message' : text, 'random_id': 0, 'keyboard' : keyboard})

def reply_check(event):
	msg_inf = event.obj['message']
	if 'reply_message' in msg_inf:
		reply_check = msg_inf['reply_message']['from_id']
		return reply_check
	else:
		return False

def reply_mess(event):
	msg_inf = event.obj['message']
	if 'reply_message' in msg_inf:
		text = msg_inf['reply_message']['text']
		return text

def get_balance(user):
	db = sqlite3.connect('chats.db')
	cur = db.cursor()
	sql = "select * from GLOBAL_DB where id = ?"
	cur.execute(sql, (user,))
	records = cur.fetchall()
	for record in records:
		cur.close()
		bal = record[1]
		return bal

def get_hide(user):
	db = sqlite3.connect('chats.db')
	cur = db.cursor()
	sql = "select * from GLOBAL_DB where id = ?"
	cur.execute(sql, (user,))
	records = cur.fetchall()
	for record in records:
		cur.close()
		bal = record[3]
		return bal

def get_factor(user):
	db = sqlite3.connect('chats.db')
	cur = db.cursor()
	sql = "select * from GLOBAL_DB where id = ?"
	cur.execute(sql, (user,))
	records = cur.fetchall()
	for record in records:
		cur.close()
		bal = record[5]
		return bal

def shop(id, user_id):
	bal = getbalance(user_id)
	msg(id, '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞–≥–∞–∑–∏–Ω PRIMAT-MODERüõí\n–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + str(bal) + ' –ö–æ–∏–Ω–æ–≤üí∞\n\nindev...')

def get_name(uid: int) -> str:
	if int(uid) > 0:
		da = bh.method("users.get", {"user_ids": uid})
		dat = str(da)
		dat1 = dat.split("'first_name' : ")[0]
		data = dat1.replace("'", "")
		data_ = data.replace("'", "")
		d = data_.split(',')[1]
		data_f = d.replace(' first_name:', '')
		return data_f

def get_as(user_id):
	try:
		sqlite_connection = sqlite3.connect('chats.db')
		cursor = sqlite_connection.cursor()

		sql_select_query = """select * from GLOBAL_DB where id = ?"""
		cursor.execute(sql_select_query, (user_id,))
		records = cursor.fetchall()
		for record in records:
			cursor.close()
			admin = record[2]
			return admin
	except sqlite3.Error as error:
		a = 0
		a += 1
	finally:
		if (sqlite_connection):
			sqlite_connection.close()

def is_admin(id):
	info = bh.method('messages.getConversationMembers', {'peer_id' : 2000000000 + int(id)})
	information = info['items']
	inf = information[0]
	ifn = str(inf)
	if 'is_owner' in ifn:
		user = inf['member_id']
		return user

def kick(id, user_id):
	try:
		num_check = is_num(user_id)
		if num_check == True:
			bh.method('messages.removeChatUser', {'chat_id' : id, 'member_id' : user_id})
			msg(id, '[id' + str(user) + '|–£—á–∞—Å—Ç–Ω–∏–∫] –±—ã–ª –∏—Å–∫–ª—é—á—ë–Ω –∏–∑ –±–µ—Å–µ–¥—ã.')
			return True
		else:
			return False
	except vk_api.exceptions.ApiError:
		msg(id, '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω. –ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏—Å–∫–ª—é—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –≤–æ–∑–º–æ–∂–Ω–æ –æ–Ω —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –∏–ª–∏ —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º –±–µ—Å–µ–¥—ã.')

def check_chat(chat_id, id):
	try:
		db = sqlite3.connect('chats.db')
		cursor = db.cursor()
		table = 'CHAT_' + str(chat_id)
		db.execute('''CREATE TABLE {table} (
			id BIGINT,
			nickname TEXT,
			admin_lvl INT,
			ban_state INT)'''.format(table=table))
		db.commit()

		check_adm(chat_id, id)

	except sqlite3.Error as error:
		check_adm(chat_id, id)
	finally:
		if (db):
			db.close()

def check_adm(id, user):
	is_adm = is_admin(id)
	table = 'CHAT_' + str(id)
	db = sqlite3.connect('chats.db')
	cursor = db.cursor()		
	db.commit()
	g = "INSERT INTO GLOBAL_DB VALUES (?, ?, ?, ?, ?, ?)"

	met = "SELECT * FROM " + table + " WHERE id = ?"
	cursor.execute(met, (is_adm,))
	db.commit()
	name = get_name(is_adm)
	if cursor.fetchone() is None:
		cursor.execute(f"INSERT INTO " + table + f" VALUES (?, ?, ?, ?)", (int(is_adm), name, 5, 0))
		db.commit()
		cursor.execute(g, (int(user), 0, 0, 0, 0, 50))

	met1 = "SELECT * FROM " + table + " WHERE id = ?"
	cursor.execute(met1, (user,))
	name1 = get_name(user)
	if cursor.fetchone() is None:
		cursor.execute(f"INSERT INTO " + table + f" VALUES (?, ?, ?, ?)", (int(user), name1, 0, 0))
		db.commit()
		cursor.execute(g, (int(user), 0, 0, 0, 50))
		db.commit()
		db.close()
	else:
		cursor.close()

def adm_inf(user_id, id, stat):
	if stat == 1:
		bal = get_balance(user_id)
		adm = get_as(user_id)
		hide = get_hide(user_id)
		if int(adm) > 1 or int(adm) == 1:
			if adm == 1:
				adm_stat = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
			elif adm == 2:
				adm_stat = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
			elif adm == 3:
				adm_stat = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
			elif adm == 4:
				adm_stat = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
			elif adm == 5:
				adm_stat = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'
			if hide == 0:
				hide_stat = '–í—ã –Ω–µ —Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.'
			elif hide == 1:
				hide_stat = '–í—ã —Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.'
			msg(id, 'üõ°–¢—ã –ø–æ–ø–∞–ª –≤ –∞–¥–º–∏–Ω-–∏–Ω—Ñ–æüõ°\n\nüí∏–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + str(bal) + ' –ö–æ–∏–Ω–æ–≤üí∞\nüìç–¢–≤–æ–π —Å—Ç–∞—Ç—É—Å: ' + adm_stat + '\nüß™' + hide_stat)
	else:
		bal = get_balance(user_id)
		adm = get_as(user_id)
		hide = get_hide(user_id)
		if int(adm) > 1 or int(adm) == 1:
			if adm == 1:
				adm_stat = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
			elif adm == 2:
				adm_stat = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
			elif adm == 3:
				adm_stat = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
			elif adm == 4:
				adm_stat = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
			elif adm == 5:
				adm_stat = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'
			if hide == 0:
				hide_stat = '–í—ã –Ω–µ —Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.'
			elif hide == 1:
				hide_stat = '–í—ã —Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.'
			send(user_id, 'üõ°–¢—ã –ø–æ–ø–∞–ª –≤ –∞–¥–º–∏–Ω-–∏–Ω—Ñ–æüõ°\n\nüí∏–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: ' + str(bal) + ' –ö–æ–∏–Ω–æ–≤üí∞\nüìç–¢–≤–æ–π —Å—Ç–∞—Ç—É—Å: ' + adm_stat + '\nüß™' + hide_stat, create_keyboard('–∞–¥–º–∏–Ω –º–µ–Ω—é', user_id))

def admin_menu(message, user_id):
	name = get_name(user_id)
	adm = get_as(user_id)
	if int(adm) > 1 or int(adm) == 1:
		if adm == 1:
			status = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
		elif adm == 2:
			status = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
		elif adm == 3:
			status = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
		elif adm == 4:
			status = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
		elif adm == 5:
			status = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'
		send(user_id, 'üõ°–¢—ã –ø–æ–ø–∞–ª –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—éüõ°\n–í–Ω–∏–∑—É –µ—Å—Ç—å –∫–Ω–æ–ø–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–±–µ –¥–æ—Å—Ç—É–ø–Ω—ã.\n–ö–Ω–æ–ø–∫–∏ –∑–∞–≤–∏—Å—è—Ç –æ—Ç —Ç–≤–æ–µ–≥–æ —Å—Ç–∞—Ç—É—Å–∞.\n–°–µ–π—á–∞—Å —Ç–≤–æ–π —Å—Ç–∞—Ç—É—Å: ' + status, create_keyboard(message, user_id))

def is_ban(user_id):
	try:
		sqlite_connection = sqlite3.connect('chats.db')
		cursor = sqlite_connection.cursor()

		sql_select_query = """select * from GLOBAL_DB where id = ?"""
		cursor.execute(sql_select_query, (user_id,))
		records = cursor.fetchall()
		for record in records:
			cursor.close()
			ban_state = record[4]
			return ban_state
	except sqlite3.Error as error:
		print("[READ_DB] –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ sqlite", error)
	finally:
		if (sqlite_connection):
			sqlite_connection.close()

def get_last_msg(id):
	info = bh.method('messages.getHistory', {'user_id' : id, 'count': 1})
	text = info['items']
	text = text[0]['text']
	return text

def unban_user(user_id, link):
	link = link.replace('https://vk.com/', '')
	if 'id' in link or '@id' in link:
		send(user_id, '–†–∞–∑–±–∞–Ω–∏–≤–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + str(link), None)
		uid = get_last_msg(user_id)
		u_id = uid.replace('–†–∞–∑–±–∞–Ω–∏–≤–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
		userr = u_id.split("|")[0]
		user = userr.replace('[', '')
		if "id" in user:
			user = user.replace("id", "")
		ban_status = is_ban(user)
		if ban_status == 1:
			sqlite_connection = sqlite3.connect('chats.db')
			cur = sqlite_connection.cursor()

			cur.execute(f"""UPDATE GLOBAL_DB SET ban_stat = ? WHERE id = ?""", (0, user))
			sqlite_connection.commit()
			cur.close()
			send(user_id, '‚úÖ[id' + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω.', create_keyboard('adminmen', int(user_id)))
		else:
			send(user_id, '‚ùå[id' + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –Ω–µ –∏–º–µ–µ—Ç –±–∞–Ω–∞.', create_keyboard('adminmen', int(user_id)))
	else:
		send(user_id, '–†–∞–∑–±–∞–Ω–∏–≤–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @' + str(link), None)
		uid = get_last_msg(user_id)
		u_id = uid.replace('–†–∞–∑–±–∞–Ω–∏–≤–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
		if "@" in u_id:
			userr = u_id.split("|")[0]
			user = userr.replace('[', '')
			if "id" in user:
				user = user.replace("id", "")
		ban_status = is_ban(user)
		if ban_status == 1:
			sqlite_connection = sqlite3.connect('chats.db')
			cur = sqlite_connection.cursor()

			cur.execute(f"""UPDATE GLOBAL_DB SET ban_stat = ? WHERE id = ?""", (0, user))
			sqlite_connection.commit()
			cur.close()
			send(user_id, '‚úÖ[id' + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É—Å–ø–µ—à–Ω–æ —Ä–∞–∑–±–∞–Ω–µ–Ω.', create_keyboard('adminmen', int(user_id)))
		else:
			send(user_id, '‚ùå[id' + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] –Ω–µ –∏–º–µ–µ—Ç –±–∞–Ω–∞.', create_keyboard('adminmen', int(user_id)))
def ban_user(user_id, link):
	link = link.replace('https://vk.com/', '')
	if 'id' in link or '@id' in link:
		send(user_id, '–ë–∞–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + str(link), None)
		uid = get_last_msg(user_id)
		u_id = uid.replace('–ë–∞–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
		userr = u_id.split("|")[0]
		user = userr.replace('[', '')
		if "id" in user:
			user = user.replace("id", "")
		ban_status = is_ban(user)
		if ban_status == 0:
			sqlite_connection = sqlite3.connect('chats.db')
			cur = sqlite_connection.cursor()

			cur.execute(f"""UPDATE GLOBAL_DB SET ban_stat = ? WHERE id = ?""", (1, user))
			sqlite_connection.commit()
			cur.close()
			send(user_id, '‚úÖ[id' + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω.', create_keyboard('adminmen', int(user_id)))
		else:
			send(user_id, '‚ùå[id' + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω.', create_keyboard('adminmen', int(user_id)))
	else:
		send(user_id, '–ë–∞–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @' + str(link), None)
		uid = get_last_msg(user_id)
		u_id = uid.replace('–ë–∞–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
		if "@" in u_id:
			userr = u_id.split("|")[0]
			user = userr.replace('[', '')
			if "id" in user:
				user = user.replace("id", "")
		ban_status = is_ban(user)
		if ban_status == 0:
			sqlite_connection = sqlite3.connect('chats.db')
			cur = sqlite_connection.cursor()

			cur.execute(f"""UPDATE GLOBAL_DB SET ban_stat = ? WHERE id = ?""", (1, user))
			sqlite_connection.commit()
			cur.close()
			send(user_id, '‚úÖ[id' + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É—Å–ø–µ—à–Ω–æ –∑–∞–±–∞–Ω–µ–Ω.', create_keyboard('adminmen', int(user_id)))
		else:
			send(user_id, '‚ùå[id' + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å] —É–∂–µ –∑–∞–±–∞–Ω–µ–Ω.', create_keyboard('adminmen', int(user_id)))
def ban(user_id):
	send(user_id, "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ –∑–∞–±–∞–Ω–∏—Ç—å.", None)
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			if event.from_user:
				link = str(event.object.message['text'].lower())
				if 'https://vk.com/' in link or '@' in link:
					ban_user(user_id, link)
					break

def unban(user_id):
	send(user_id, "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω–∞–¥–æ —Ä–∞–∑–±–∞–Ω–∏—Ç—å.", None)
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			if event.from_user:
				link = str(event.object.message['text'].lower())
				if 'https://vk.com/' in link or '@' in link:
					unban_user(user_id, link)
					break

def user_info(user_id, link):
	link = link.replace('https://vk.com/', '')
	if 'id' in link or '@id' in link:
		send(user_id, '–ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + str(link), None)
		uid = get_last_msg(user_id)
		u_id = uid.replace('–ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
		userr = u_id.split("|")[0]
		user = userr.replace('[', '')
		if "id" in user:
			user = user.replace("id", "")
		ban_status = is_ban(user)
		bal = get_balance(user)
		adm = get_as(user)
		hide = get_hide(user)
		if int(adm) > 1 or int(adm) == 1:
			if adm == 1:
				adm_stat = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
			elif adm == 2:
				adm_stat = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
			elif adm == 3:
				adm_stat = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
			elif adm == 4:
				adm_stat = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
			elif adm == 5:
				adm_stat = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'
			if hide == 0:
				hide_stat = '–û–Ω –Ω–µ —Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.'
			elif hide == 1:
				hide_stat = '–û–Ω —Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.'
			if ban_status == 1:
				ban = "üìï–û–Ω –∑–∞–±–∞–Ω–µ–Ω"
			elif ban_status == 0:
				ban = "üìó–û–Ω –Ω–µ –∑–∞–±–∞–Ω–µ–Ω"
			info = 'üí∏–ï–≥–æ –±–∞–ª–∞–Ω—Å: ' + str(bal) + ' –ö–æ–∏–Ω–æ–≤üí∞\nüìç–ï–≥–æ —Å—Ç–∞—Ç—É—Å: ' + adm_stat + '\nüß™' + hide_stat + '\n' + ban
			send(user_id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è [id" + str(user) + "|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]:\n\n" + info, create_keyboard('adminmen', int(user_id)))
		else:
			if ban_status == 1:
				ban = "üìï–û–Ω –∑–∞–±–∞–Ω–µ–Ω"
			elif ban_status == 0:
				ban = "üìó–û–Ω –Ω–µ –∑–∞–±–∞–Ω–µ–Ω"
			info = 'üí∏–ï–≥–æ –±–∞–ª–∞–Ω—Å: ' + str(bal) + ' –ö–æ–∏–Ω–æ–≤üí∞\nüìç–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n' + ban
			send(user_id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è [id" + str(user) + "|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]:\n\n" + info, create_keyboard('adminmen', int(user_id)))
	else:
		send(user_id, '–ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @' + str(link), None)
		uid = get_last_msg(user_id)
		u_id = uid.replace('–ü–æ–ª—É—á–∞—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
		if "@" in u_id:
			userr = u_id.split("|")[0]
			user = userr.replace('[', '')
			if "id" in user:
				user = user.replace("id", "")
		ban_status = is_ban(user)
		bal = get_balance(user)
		adm = get_as(user)
		hide = get_hide(user)
		if int(adm) > 1 or int(adm) == 1:
			if adm == 1:
				adm_stat = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
			elif adm == 2:
				adm_stat = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
			elif adm == 3:
				adm_stat = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
			elif adm == 4:
				adm_stat = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
			elif adm == 5:
				adm_stat = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'
			if hide == 0:
				hide_stat = '–û–Ω –Ω–µ —Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.'
			elif hide == 1:
				hide_stat = '–û–Ω —Å–∫—Ä—ã–≤–∞–µ—Ç–µ —Å–≤–æ–π —Å—Ç–∞—Ç—É—Å.'
			if ban_status == 1:
				ban = "üìï–û–Ω –∑–∞–±–∞–Ω–µ–Ω"
			elif ban_status == 0:
				ban = "üìó–û–Ω –Ω–µ –∑–∞–±–∞–Ω–µ–Ω"
			info = 'üí∏–ï–≥–æ –±–∞–ª–∞–Ω—Å: ' + str(bal) + ' –ö–æ–∏–Ω–æ–≤üí∞\nüìç–ï–≥–æ —Å—Ç–∞—Ç—É—Å: ' + adm_stat + '\nüß™' + hide_stat + '\n' + ban
			send(user_id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è [id" + str(user) + "|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]:\n\n" + info, create_keyboard('adminmen', int(user_id)))
		else:
			if ban_status == 1:
				ban = "üìï–û–Ω –∑–∞–±–∞–Ω–µ–Ω"
			elif ban_status == 0:
				ban = "üìó–û–Ω –Ω–µ –∑–∞–±–∞–Ω–µ–Ω"
			info = 'üí∏–ï–≥–æ –±–∞–ª–∞–Ω—Å: ' + str(bal) + ' –ö–æ–∏–Ω–æ–≤üí∞\nüìç–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º\n' + ban
			send(user_id, "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è [id" + str(user) + "|–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è]:\n\n" + info, create_keyboard('adminmen', int(user_id)))
		

def get_user_info(user_id):
	send(user_id, "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å.", None)
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			if event.from_user:
				link = str(event.object.message['text'].lower())
				if 'https://vk.com/' in link or '@' in link:
					user_info(user_id, link)
					break

def give_tex(user_id):
	send(user_id, "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–º—É –Ω–∞–¥–æ –¥–∞—Ç—å [1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫—É.", None)
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			if event.from_user:
				link = str(event.object.message['text'].lower())
				if 'https://vk.com/' in link or '@' in link:
					link = link.replace('https://vk.com/', '')
					if 'id' in link or '@id' in link:
						send(user_id, '–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫—É ' + str(link), None)
						uid = get_last_msg(user_id)
						u_id = uid.replace('–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫—É ', '')
						userr = u_id.split("|")[0]
						user = userr.replace('[', '')
						if "id" in user:
							user = user.replace("id", "")

						sqlite_connection = sqlite3.connect('chats.db')
						cur = sqlite_connection.cursor()

						cur.execute(f"""UPDATE GLOBAL_DB SET admin_lvl = ? WHERE id = ?""", (1, user))
						sqlite_connection.commit()
						cur.close()
							
						send(user_id, "[id" + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] –±—ã–ª –≤—ã–¥–∞–Ω —Å—Ç–∞—Ç—É—Å [1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞', create_keyboard('adminmen', int(user_id)))
						break
					else:
						send(user_id, '–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫—É @' + str(link), None)
						uid = get_last_msg(user_id)
						u_id = uid.replace('–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é [1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫—É ', '')
						if "@" in u_id:
							userr = u_id.split("|")[0]
							user = userr.replace('[', '')
							if "id" in user:
								user = user.replace("id", "")
						sqlite_connection = sqlite3.connect('chats.db')
						cur = sqlite_connection.cursor()

						cur.execute(f"""UPDATE GLOBAL_DB SET admin_lvl = ? WHERE id = ?""", (1, user))
						sqlite_connection.commit()
						cur.close()
							
						send(user_id, "[id" + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] –±—ã–ª –≤—ã–¥–∞–Ω —Å—Ç–∞—Ç—É—Å [1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞', create_keyboard('adminmen', int(user_id)))
						break
						

def admin_up(user_id):
	send(user_id, "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–æ–≤—ã—Å–∏—Ç—å.", None)
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			if event.from_user:
				link = str(event.object.message['text'].lower())
				if 'https://vk.com/' in link or '@' in link:
					link = link.replace('https://vk.com/', '')
					if 'id' in link or '@id' in link:
						send(user_id, '–ü–æ–≤—ã—à–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + str(link), None)
						uid = get_last_msg(user_id)
						u_id = uid.replace('–ü–æ–≤—ã—à–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
						userr = u_id.split("|")[0]
						user = userr.replace('[', '')
						if "id" in user:
							user = user.replace("id", "")

						old_adm = get_as(user)

						new_adm = int(old_adm) + 1

						if new_adm == 1:
							adm_stat = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
						elif new_adm == 2:
							adm_stat = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
						elif new_adm == 3:
							adm_stat = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
						elif new_adm == 4:
							adm_stat = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
						elif new_adm == 5:
							adm_stat = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'

						sqlite_connection = sqlite3.connect('chats.db')
						cur = sqlite_connection.cursor()

						cur.execute(f"""UPDATE GLOBAL_DB SET admin_lvl = ? WHERE id = ?""", (new_adm, user))
						sqlite_connection.commit()
						cur.close()
							
						send(user_id, "[id" + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] –ø–æ–≤—ã—à–µ–Ω –¥–æ —Å—Ç–∞—Ç—É—Å–∞ ' + adm_stat, create_keyboard('adminmen', int(user_id)))
						break
					else:
						send(user_id, '–ü–æ–≤—ã—à–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @' + str(link), None)
						uid = get_last_msg(user_id)
						u_id = uid.replace('–ü–æ–≤—ã—à–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
						if "@" in u_id:
							userr = u_id.split("|")[0]
							user = userr.replace('[', '')
							if "id" in user:
								user = user.replace("id", "")

						old_adm = get_as(user)

						new_adm = int(old_adm) + 1

						if new_adm == 1:
							adm_stat = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
						elif new_adm == 2:
							adm_stat = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
						elif new_adm == 3:
							adm_stat = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
						elif new_adm == 4:
							adm_stat = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
						elif new_adm == 5:
							adm_stat = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'

						sqlite_connection = sqlite3.connect('chats.db')
						cur = sqlite_connection.cursor()

						cur.execute(f"""UPDATE GLOBAL_DB SET admin_lvl = ? WHERE id = ?""", (new_adm, user))
						sqlite_connection.commit()
						cur.close()
							
						send(user_id, "[id" + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] –ø–æ–≤—ã—à–µ–Ω –¥–æ —Å—Ç–∞—Ç—É—Å–∞ ' + adm_stat, create_keyboard('adminmen', int(user_id)))
						break
						

def admin_down(user_id):
	send(user_id, "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–æ–Ω–∏–∑–∏—Ç—å.", None)
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			if event.from_user:
				link = str(event.object.message['text'].lower())
				if 'https://vk.com/' in link or '@' in link:
					link = link.replace('https://vk.com/', '')
					if 'id' in link or '@id' in link:
						send(user_id, '–ü–æ–Ω–∏–∂–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + str(link), None)
						uid = get_last_msg(user_id)
						u_id = uid.replace('–ü–æ–Ω–∏–∂–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
						userr = u_id.split("|")[0]
						user = userr.replace('[', '')
						if "id" in user:
							user = user.replace("id", "")

						old_adm = get_as(user)

						new_adm = int(old_adm) - 1

						if new_adm == 1:
							adm_stat = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
						elif new_adm == 2:
							adm_stat = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
						elif new_adm == 3:
							adm_stat = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
						elif new_adm == 4:
							adm_stat = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
						elif new_adm == 5:
							adm_stat = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'

						sqlite_connection = sqlite3.connect('chats.db')
						cur = sqlite_connection.cursor()

						cur.execute(f"""UPDATE GLOBAL_DB SET admin_lvl = ? WHERE id = ?""", (new_adm, user))
						sqlite_connection.commit()
						cur.close()
							
						send(user_id, "[id" + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] –ø–æ–Ω–∏–∂–µ–Ω –¥–æ —Å—Ç–∞—Ç—É—Å–∞ ' + adm_stat, create_keyboard('adminmen', int(user_id)))
						break
					else:
						send(user_id, '–ü–æ–Ω–∏–∂–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @' + str(link), None)
						uid = get_last_msg(user_id)
						u_id = uid.replace('–ü–æ–Ω–∏–∂–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
						if "@" in u_id:
							userr = u_id.split("|")[0]
							user = userr.replace('[', '')
							if "id" in user:
								user = user.replace("id", "")

						old_adm = get_as(user)

						new_adm = int(old_adm) - 1

						if new_adm == 1:
							adm_stat = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
						elif new_adm == 2:
							adm_stat = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
						elif new_adm == 3:
							adm_stat = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
						elif new_adm == 4:
							adm_stat = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
						elif new_adm == 5:
							adm_stat = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'

						sqlite_connection = sqlite3.connect('chats.db')
						cur = sqlite_connection.cursor()

						cur.execute(f"""UPDATE GLOBAL_DB SET admin_lvl = ? WHERE id = ?""", (new_adm, user))
						sqlite_connection.commit()
						cur.close()
							
						send(user_id, "[id" + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] –ø–æ–Ω–∏–∂–µ–Ω –¥–æ —Å—Ç–∞—Ç—É—Å–∞ ' + adm_stat, create_keyboard('adminmen', int(user_id)))
						break

def admin_take_off(user_id):
	send(user_id, "–í—Å—Ç–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ —Å–Ω—è—Ç—å.", None)
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			if event.from_user:
				link = str(event.object.message['text'].lower())
				if 'https://vk.com/' in link or '@' in link:
					link = link.replace('https://vk.com/', '')
					if 'id' in link or '@id' in link:
						send(user_id, '–°–Ω–∏–º–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ' + str(link), None)
						uid = get_last_msg(user_id)
						u_id = uid.replace('–°–Ω–∏–º–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
						userr = u_id.split("|")[0]
						user = userr.replace('[', '')
						if "id" in user:
							user = user.replace("id", "")

						sqlite_connection = sqlite3.connect('chats.db')
						cur = sqlite_connection.cursor()

						cur.execute(f"""UPDATE GLOBAL_DB SET admin_lvl = ? WHERE id = ?""", (0, user))
						sqlite_connection.commit()
						cur.close()
							
						send(user_id, "[id" + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] –±—ã–ª —Å–Ω—è—Ç.', create_keyboard('adminmen', int(user_id)))
						break
					else:
						send(user_id, '–°–Ω–∏–º–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @' + str(link), None)
						uid = get_last_msg(user_id)
						u_id = uid.replace('–°–Ω–∏–º–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
						if "@" in u_id:
							userr = u_id.split("|")[0]
							user = userr.replace('[', '')
							if "id" in user:
								user = user.replace("id", "")
						sqlite_connection = sqlite3.connect('chats.db')
						cur = sqlite_connection.cursor()

						cur.execute(f"""UPDATE GLOBAL_DB SET admin_lvl = ? WHERE id = ?""", (0, user))
						sqlite_connection.commit()
						cur.close()
							
						send(user_id, "[id" + str(user) + '|–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é] –±—ã–ª —Å–Ω—è—Ç.', create_keyboard('adminmen', int(user_id)))
						break

def online_check(admin_id):
	is_on = bh.method('users.get', {'user_ids' : admin_id, 'fields' : 'online'})[0]
	is_online = is_on['online']
	if is_online == 1:
		return True
	else:
		return False
def checking(admin_id, admin_stat, admin_name):
	if admin_stat == 5:
		stat = '[5] –í–ª–∞–¥–µ–ª–µ—Ü'
	elif admin_stat == 4:
		stat = '[4] –¢–∏–º–ª–∏–¥ –°—Ç–∞—Ñ—Ñ–∞'
	elif admin_stat == 3:
		stat = '[3] –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä'
	elif admin_stat == 2:
		stat = '[2] –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä'
	elif admin_stat == 1:
		stat = '[1] –¢–µ—Ö.–ü–æ–¥–¥–µ—Ä–∂–∫–∞'
	return_ = '[id' + str(admin_id) + '|' + str(admin_name) + '] - ' + str(stat) + '\n'
	return return_

def admin_cycle(id):
	db = sqlite3.connect('chats.db', timeout=20)
	cursor = db.cursor()
	cursor.execute('SELECT id, admin_lvl FROM GLOBAL_DB ORDER BY admin_lvl DESC')
	one = cursor.fetchall()
	a = 0
	num = elements_num(one)
	full_list = ''
	while a < int(num):
		listt = one[int(a)]
		a += 1
		bb = str(listt)
		hh = bb.split(', ')[1]
		k = hh.replace(')', '')
		j = k.replace('(', '')
		if j != '0':
			idd = bb.split(', ')[0]
			ida = idd.replace('(', '')
			admin_id = ida.replace(')', '')
			admin_name = get_name(admin_id)
			admin_stat = get_as(admin_id)
			online = online_check(admin_id)
			if online == True:
				return_ = checking(admin_id, admin_stat, admin_name)
				if return_ == None:
					continue
				else:
					full_list = full_list + return_
	send(id, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏—è –±–æ—Ç–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–µ–π—á–∞—Å –≤ —Å–µ—Ç–∏:\n\n' + full_list, create_keyboard('adminmen', int(id)))

def count_lines(txt):
	with open(txt) as f:
		line_count = 0
		for line in f:
			line_count += 1
		return line_count

def factor_method(user, from_report):
	factor = get_factor(user)
	factor_from = get_factor(from_report)
	if user == from_report:
		return False
	else:
		if factor < 10:
			return False

		else:
			sql = sqlite3.connect('chats.db', timeout=20)
			cur = sql.cursor()

			factor_new = int(factor) - 10

			from_report_factor = int(factor_from) + 10

			cur.execute("""UPDATE GLOBAL_DB SET factor = ? WHERE id = ?""", (factor_new, user))

			cur.execute("""UPDATE GLOBAL_DB SET factor = ? WHERE id = ?""", (from_report_factor, from_report))

			sql.commit()
			cur.close()

			return True

def second_rep(user_id, line):
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			message = str(event.object.message['text'].lower())
			if message == '–∑–∞–±–∞–Ω–∏—Ç—å':
				f = open('reports.txt', encoding="utf-8").read()
				res = f.replace(line,'')
				with open('reports.txt', 'w', encoding="utf-8") as f:
					f.write(res)
				user = '@id' + line.split(',')[0]
				ban_user(user_id, user)
				break
			elif message == '—É–¥–∞–ª–∏—Ç—å —Ä–µ–ø–æ—Ä—Ç':
				f = open('reports.txt', encoding="utf-8").read()
				res = f.replace(line,'')
				with open('reports.txt', 'w', encoding="utf-8") as f:
					f.write(res)
				send(user_id, "–†–µ–ø–æ—Ä—Ç —É–¥–∞–ª—ë–Ω.", None)
				break
			elif message == '–ø–æ–Ω–∏–∑–∏—Ç—å —Ñ–∞–∫—Ç–æ—Ä –¥–æ–≤–µ—Ä–∏—è':
				f = open('reports.txt', encoding="utf-8").read()
				res = f.replace(line,'')
				with open('reports.txt', 'w', encoding="utf-8") as f:
					f.write(res)
				user = line.split(',')[0]
				from_report = line.split(':')[1]
				fac = factor_method(user, from_report)
				if fac == True:
					send(user_id, "–§–∞–∫—Ç–æ—Ä –¥–æ–≤–µ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–Ω–∏–∂–µ–Ω.", None)
				elif fac == False:
					send(user_id, "–§–∞–∫—Ç–æ—Ä –¥–æ–≤–µ—Ä–∏—è –Ω–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –ø–æ–Ω–∏–∂–µ–Ω.\n–ë–∞–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...", None)
					ban_user(user_id, user)
				else:
					send(user_id, 'error', None)
				break
			else:
				send(user_id, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!', create_keyboard('report_do', int(user_id)))
def check_reports(user_id):
	count = count_lines('reports.txt')
	send(user_id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–ø–æ—Ä—Ç–æ–≤ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: ' + str(count), create_keyboard('key1_reports', int(user_id)))
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			message = str(event.object.message['text'].lower())
			if message == "–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é":
				send(user_id, '–í–æ–∑–≤—Ä–∞—â–∞—é...', create_keyboard('adminmen', int(user_id)))
			elif message == '–Ω–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä —Ä–µ–ø–æ—Ä—Ç–æ–≤':
				b = 1
				a = 1
				while a > 0:
					if int(b) < int(count) or b == count:
						f = open('reports.txt', encoding="utf-8")
						for line in f:
							help = line.split('`')[0]
							user_rep = help.split(',')[0]
							user = '@id' + str(user_rep)
							text = help.split(',')[1]
							realsoon = line.split('`')[1]
							factorr = get_factor(user_rep)
							from_report = line.split(':')[1]
							realson = realsoon.split(':')[0]
							if int(factorr) > 70 and int(factorr) < 100:
								factor = '–§–∞–∫—Ç–æ—Ä –¥–æ–≤–µ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: üìó–û—Ç–ª–∏—á–Ω—ã–π.'
							elif int(factorr) < 30 and int(factorr) > 0:
								factor = '–§–∞–∫—Ç–æ—Ä –¥–æ–≤–µ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: üìç–£–∂–∞—Å–Ω—ã–π.'
							elif int(factorr) > 29 and int(factorr) < 71:
								factor = '–§–∞–∫—Ç–æ—Ä –¥–æ–≤–µ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: üÜï–ù–æ—Ä–º–∞–ª—å–Ω—ã–π.'
							else:
								factor = '‚õî–û–®–ò–ë–ö–ê: –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ñ–∞–∫—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.'
							report = '‚úâ–ù–∞ –∫–æ–≥–æ: ' + user + '\nüóí–¢–µ–∫—Å—Ç —Ä–µ–ø–æ—Ä—Ç–∞: ' + text + '\nüí¨–ü—Ä–∏—á–∏–Ω–∞: ' + realson + '\nüìä' + factor
							send(user_id, 'üìã–†–µ–ø–æ—Ä—Ç –æ—Ç @id' + from_report + '\n' + report, create_keyboard('report_do', int(user_id)))
							second_rep(user_id, line)
						b += 1
					else:
						send(user_id, '–†–µ–ø–æ—Ä—Ç—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å(((', create_keyboard('key1_reports', int(user_id)))
						break

def second_ques(user_id, line):
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			message = str(event.object.message['text'].lower())
			if message == '–æ—Ç–≤–µ—Ç–∏—Ç—å':
				f = open('questions.txt', encoding="utf-8").read()
				user = f.split(',')[0]
				res = f.replace(line,'')
				with open('questions.txt', 'w', encoding="utf-8") as f:
					f.write(res)
				send(user_id, "–ù–∞–ø–∏—à–∏—Ç–µ —Å—é–¥–∞ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é", None)
				for event in longpoll.listen():
					if event.type == VkBotEventType.MESSAGE_NEW:
						answer = str(event.object.message['text'].lower())
						try:
							send(user, '–ù–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –æ—Ç–≤–µ—Ç–∏–ª –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä:\n' + str(answer), None)
							send(user_id, '–í—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é.', create_keyboard('key1_questions', int(user_id)))
						except:
							send(user_id, '–í—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã.', None)
						finally:
							break
				break
			elif message == '–ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å':
				send(user_id, "–í–æ–ø—Ä–æ—Å –ø—Ä–æ–ø—É—â–µ–Ω.", None)
				break
			else:
				send(user_id, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!', create_keyboard('questions_do', int(user_id)))

def check_questions(user_id):
	count = count_lines('questions.txt')
	send(user_id, '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤ –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç: ' + str(count), create_keyboard('key1_questions', int(user_id)))
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			message = str(event.object.message['text'].lower())
			if message == "–≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –∞–¥–º–∏–Ω-–º–µ–Ω—é":
				send(user_id, '–í–æ–∑–≤—Ä–∞—â–∞—é...', create_keyboard('adminmen', int(user_id)))
			if message == '–Ω–∞—á–∞—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä –≤–æ–ø—Ä–æ—Å–æ–≤':
				b = 1
				a = 1
				while a > 0:
					if int(b) < int(count) or b == count:
						f = open('questions.txt', encoding="utf-8")
						for line in f:
							user = '@id' + line.split(',')[0]
							text = line.split(',')[1]
							questions = '–û—Ç –∫–æ–≥–æ: ' + user + '\n–¢–µ–∫—Å—Ç –≤–æ–ø—Ä–æ—Å–∞: ' + text
							send(user_id, '–í–æ–ø—Ä–æ—Å:\n' + questions, create_keyboard('questions_do', int(user_id)))
							second_ques(user_id, line)
						b += 1
					else:
						send(user_id, '–í–æ–ø—Ä–æ—Å—ã –∑–∞–∫–æ–Ω—á–∏–ª–∏—Å—å(((', create_keyboard('key1_questions', int(user_id)))
						break
			else:
				send(user_id, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ!', create_keyboard('key1_questions', int(user_id)))


def start(user_id):
	send(user_id, '–í—ã –ø–æ–ø–∞–ª–∏ –≤ –º–µ–Ω—é –±–æ—Ç–∞.\n–ß—Ç–æ–±—ã —É–ø—Ä–∞–≤–ª—è—Ç—å –±–æ—Ç–æ–º –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏.', create_keyboard('menu', int(user_id)))

def get_all_banned_users(chat):
    sqlite_connection = sqlite3.connect('chats.db')
    
    cursor = sqlite_connection.cursor()

    sqlite_select_query = """SELECT * from {table}""".format(table=chat)
    cursor.execute(sqlite_select_query)
    records = cursor.fetchall()
    bans = '–ó–∞–±–∞–Ω–µ–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –¥–∞–Ω–Ω–æ–π –±–µ—Å–µ–¥—ã:'
    for row in records:
        ban_state = row[3]
        if ban_state == 1:
            a = '\n' + '@id' + str(row[0])
            bans += a
    return bans

def leave_admin_menu(user_id):
	send(user_id, '–í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–¥–º–∏–Ω-–º–µ–Ω—é', create_keyboard('menu', int(user_id)))

def get_my_bal(user_id):
	balik = get_balance(user_id)
	send(user_id, "üí∏–¢–≤–æ–π –±–∞–ª–∞–Ω—Å: " + str(balik) + ' –ö–æ–∏–Ω–æ–≤üí∞', create_keyboard('menu', int(user_id)))

def chat_manage(user_id):
	send(user_id, '–í–≤–µ–¥–∏—Ç–µ –∞–π–¥–∏ –±–µ—Å–µ–¥—ã, –∫–æ—Ç–æ—Ä—É—é —Ö–æ—Ç–∏—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å.\n–ê–π–¥–∏ –±–µ—Å–µ–¥—ã –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –∫–æ–º–∞–Ω–¥–æ–π chat_id –≤ –±–µ—Å–µ–¥–µ.', None)
	for event in longpoll.listen():
		if event.type == VkBotEventType.MESSAGE_NEW:
			try:
				mess = str(event.object.message['text'].lower())

				check = is_num(mess)
				if check == True:

					table = 'CHAT_' + str(mess)
					db = sqlite3.connect('chats.db')
					cursor = db.cursor()

					sql_select_query = """select * from {table} where id = ?""".format(table=table)
					cursor.execute(sql_select_query, (user_id,))
					records = cursor.fetchall()
					for record in records:

						cursor.close()
						admin = record[2]
						if int(admin) > 4 or int(admin) == 4:
							send(user_id, '–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω.\n–í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ —Ä–µ–∂–∏–º —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–µ—Å–µ–¥–æ–π.\n–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è.', create_keyboard('chat_manage', int(user_id)))
							for event in longpoll.listen():
								if event.type == VkBotEventType.MESSAGE_NEW:
									message = str(event.object.message['text'].lower())
									if message == '–≤—ã–¥–∞—á–∞ —Å—Ç–∞—Ç—É—Å–æ–≤':
										send(user_id, '–í—ã –±—ã–ª–∏ –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤ –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞–º–∏ –≤ –±–µ—Å–µ–¥–µ.', create_keyboard('chat_status_manage', int(user_id)))
										for event in longpoll.listen():
											if event.type == VkBotEventType.MESSAGE_NEW:
												if event.from_user:

													sqlite_connection = sqlite3.connect('chats.db')
													cur = sqlite_connection.cursor()

													message = str(event.object.message['text'].lower())
													if message == '–≤—ã–¥–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞':
														send(user_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', None)
														for event in longpoll.listen():
															if event.type == VkBotEventType.MESSAGE_NEW:
																link = str(event.object.message['text'].lower())
																if 'https://vk.com/' in link or '@' in link:
																	link = link.replace('https://vk.com/', '')
																	send(user_id, '–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @' + str(link), None)
																	uid = get_last_msg(user_id)
																	u_id = uid.replace('–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ', '')
																	userr = u_id.split("|")[0]
																	user = userr.replace('[', '')
																	if "id" in user:
																		user = user.replace("id", "")

																	cur.execute("""UPDATE {table} SET admin_lvl = ? WHERE id = ?""".format(table=table), (1, user))
																	sqlite_connection.commit()
																	send(user_id, '–£—Å–ø–µ—Ö.', create_keyboard('chat_manage', int(user_id)))
																	break
													elif message == '–≤—ã–¥–∞—Ç—å –≥–ª.–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞':
														send(user_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', None)
														for event in longpoll.listen():
															if event.type == VkBotEventType.MESSAGE_NEW:
																link = str(event.object.message['text'].lower())
																if 'https://vk.com/' in link or '@' in link:
																	link = link.replace('https://vk.com/', '')
																	send(user_id, '–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @' + str(link), None)
																	uid = get_last_msg(user_id)
																	u_id = uid.replace('–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ', '')
																	userr = u_id.split("|")[0]
																	user = userr.replace('[', '')
																	if "id" in user:
																		user = user.replace("id", "")

																	cur.execute("""UPDATE {table} SET admin_lvl = ? WHERE id = ?""".format(table=table), (2, user))
																	sqlite_connection.commit()
																	send(user_id, '–£—Å–ø–µ—Ö.', create_keyboard('chat_manage', int(user_id)))
																	break
													elif message == '–≤—ã–¥–∞—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞':
														send(user_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', None)
														for event in longpoll.listen():
															if event.type == VkBotEventType.MESSAGE_NEW:
																link = str(event.object.message['text'].lower())
																if 'https://vk.com/' in link or '@' in link:
																	link = link.replace('https://vk.com/', '')
																	send(user_id, '–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @' + str(link), None)
																	uid = get_last_msg(user_id)
																	u_id = uid.replace('–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ', '')
																	userr = u_id.split("|")[0]
																	user = userr.replace('[', '')
																	if "id" in user:
																		user = user.replace("id", "")

																	cur.execute("""UPDATE {table} SET admin_lvl = ? WHERE id = ?""".format(table=table), (3, user))
																	sqlite_connection.commit()
																	send(user_id, '–£—Å–ø–µ—Ö.', create_keyboard('chat_manage', int(user_id)))
																	break
													elif message == '–≤—ã–¥–∞—Ç—å –≥–ª.–∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞':
														send(user_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', None)
														for event in longpoll.listen():
															if event.type == VkBotEventType.MESSAGE_NEW:
																link = str(event.object.message['text'].lower())
																if 'https://vk.com/' in link:
																	link = link.replace('https://vk.com/', '')
																	send(user_id, '–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @' + str(link), None)
																	uid = get_last_msg(user_id)
																	u_id = uid.replace('–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ', '')
																	userr = u_id.split("|")[0]
																	user = userr.replace('[', '')
																	if "id" in user:
																		user = user.replace("id", "")

																	cur.execute("""UPDATE {table} SET admin_lvl = ? WHERE id = ?""".format(table=table), (4, user))
																	sqlite_connection.commit()
																	send(user_id, '–£—Å–ø–µ—Ö.', create_keyboard('chat_manage', int(user_id)))
																	break
													elif message == '–≤—ã–¥–∞—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞':
														send(user_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', None)
														for event in longpoll.listen():
															if event.type == VkBotEventType.MESSAGE_NEW:
																link = str(event.object.message['text'].lower())
																if 'https://vk.com/' in link or '@' in link:
																	link = link.replace('https://vk.com/', '')
																	send(user_id, '–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é @' + str(link), None)
																	uid = get_last_msg(user_id)
																	u_id = uid.replace('–í—ã–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ', '')
																	userr = u_id.split("|")[0]
																	user = userr.replace('[', '')
																	if "id" in user:
																		user = user.replace("id", "")

																	cur.execute("""UPDATE {table} SET admin_lvl = ? WHERE id = ?""".format(table=table), (5, user))
																	sqlite_connection.commit()
																	send(user_id, '–£—Å–ø–µ—Ö.', create_keyboard('chat_manage', int(user_id)))
																	break
													elif message == '—Å–Ω—è—Ç—å –≤—Å–µ –ø—Ä–∞–≤–∞':
														send(user_id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.', None)
														for event in longpoll.listen():
															if event.type == VkBotEventType.MESSAGE_NEW:
																link = str(event.object.message['text'].lower())
																if 'https://vk.com/' in link or '@' in link:
																	link = link.replace('https://vk.com/', '')
																	send(user_id, '–°–Ω–∏–º–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @' + str(link), None)
																	uid = get_last_msg(user_id)
																	u_id = uid.replace('–°–Ω–∏–º–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ', '')
																	userr = u_id.split("|")[0]
																	user = userr.replace('[', '')
																	if "id" in user:
																		user = user.replace("id", "")

																	cur.execute("""UPDATE {table} SET admin_lvl = ? WHERE id = ?""".format(table=table), (0, user))
																	sqlite_connection.commit()
																	send(user_id, '–£—Å–ø–µ—Ö.', create_keyboard('chat_manage', int(user_id)))
																	break
													elif message == '–≤–µ—Ä–Ω—É—Ç—å—Å—è':
														send(user_id, '–í–æ–∑–≤—Ä–∞—â–∞—é.', create_keyboard('chat_manage', int(user_id)))
														break
													else:
														send(user_id, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏.', create_keyboard('chat_manage', int(user_id)))
														break
											break


									elif message == '–∑–∞–±–∞–Ω–µ–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏':
										bans_users = get_all_banned_users(table)
										send(user_id, bans_users, create_keyboard('chat_manage', int(user_id)))
									elif message == '–≤–µ—Ä–Ω—É—Ç—å—Å—è':
										send(user_id, '–í—ã –±—ã–ª–∏ –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –≤ –º–µ–Ω—é.', create_keyboard('menu', int(user_id))) 
									else:
										send(user_id, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ.', create_keyboard('chat_manage', int(user_id)))
									break
						else:
							send(user_id, '–£ –≤–∞—Å –Ω–µ—Ç—É –ø—Ä–∞–≤ —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω–æ–π –±–µ—Å–µ–¥–æ–π.', create_keyboard('menu', int(user_id))) 
							break
						break
			except sqlite3.OperationalError:
				send(user_id, '–ë–µ—Å–µ–¥—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.', create_keyboard('menu', int(user_id)))
				break
							
		break